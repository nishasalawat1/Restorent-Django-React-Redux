{"ast":null,"code":"import { LOGIN } from \"../Constant\";\nexport const fetchProductsBegin = () => ({\n  type: FETCH_PRODUCTS_BEGIN\n});\nexport const fetchProductsSuccess = data => ({\n  type: FETCH_PRODUCTS_SUCCESS,\n  data: {\n    data\n  }\n});\nexport const fetchProductsFailure = error => ({\n  type: FETCH_PRODUCTS_FAILURE,\n  data: {\n    error\n  }\n});\nexport const login = data => {\n  return dispatch => {\n    dispatch(fetchProductsBegin());\n    return fetch('http://localhost:8000/token-auth/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(handleErrors).then(res => res.json()).then(json => {\n      dispatch(fetchProductsSuccess(json.token));\n      return json.token;\n    }).catch(error => dispatch(fetchProductsFailure(error)));\n  };\n}; // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}","map":{"version":3,"sources":["/home/rails/learning/react/Restorent-Django-React-Redux/Django-React/restorant/src/Services/Action/action.js"],"names":["LOGIN","fetchProductsBegin","type","FETCH_PRODUCTS_BEGIN","fetchProductsSuccess","data","FETCH_PRODUCTS_SUCCESS","fetchProductsFailure","error","FETCH_PRODUCTS_FAILURE","login","dispatch","fetch","method","headers","body","JSON","stringify","then","handleErrors","res","json","token","catch","response","ok","Error","statusText"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AAQA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AACrCC,EAAAA,IAAI,EAAEC;AAD+B,CAAP,CAA3B;AAIL,OAAO,MAAMC,oBAAoB,GAAGC,IAAI,KAAK;AAC3CH,EAAAA,IAAI,EAAEI,sBADqC;AAE3CD,EAAAA,IAAI,EAAE;AAAEA,IAAAA;AAAF;AAFqC,CAAL,CAAjC;AAKP,OAAO,MAAME,oBAAoB,GAAGC,KAAK,KAAK;AAC5CN,EAAAA,IAAI,EAAEO,sBADsC;AAE5CJ,EAAAA,IAAI,EAAE;AAAEG,IAAAA;AAAF;AAFsC,CAAL,CAAlC;AAOT,OAAO,MAAME,KAAK,GAAIL,IAAD,IAAU;AAC3B,SAAOM,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;AACA,WAAOW,KAAK,CAAC,mCAAD,EAAsC;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFqC;AAK9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AALwC,KAAtC,CAAL,CAMJa,IANI,CAMCC,YAND,EAOFD,IAPE,CAOGE,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPV,EAQFH,IARE,CAQGG,IAAI,IAAI;AACVV,MAAAA,QAAQ,CAACP,oBAAoB,CAACiB,IAAI,CAACC,KAAN,CAArB,CAAR;AACA,aAAOD,IAAI,CAACC,KAAZ;AACH,KAXE,EAYFC,KAZE,CAYIf,KAAK,IAAIG,QAAQ,CAACJ,oBAAoB,CAACC,KAAD,CAArB,CAZrB,CAAP;AAaH,GAfD;AAgBH,CAjBM,C,CAmBP;;AACA,SAASW,YAAT,CAAsBK,QAAtB,EAAgC;AAC5B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,SAAOH,QAAP;AACH","sourcesContent":["import { LOGIN } from \"../Constant\";\n\n\n\n\n\n\n\nexport const fetchProductsBegin = () => ({\n    type: FETCH_PRODUCTS_BEGIN\n  });\n  \n  export const fetchProductsSuccess = data => ({\n    type: FETCH_PRODUCTS_SUCCESS,\n    data: { data }\n  });\n  \n  export const fetchProductsFailure = error => ({\n    type: FETCH_PRODUCTS_FAILURE,\n    data: { error }\n  });\n\n\n\nexport const login = (data) => {\n    return dispatch => {\n        dispatch(fetchProductsBegin());\n        return fetch('http://localhost:8000/token-auth/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(handleErrors)\n            .then(res => res.json())\n            .then(json => {\n                dispatch(fetchProductsSuccess(json.token));\n                return json.token;\n            })\n            .catch(error => dispatch(fetchProductsFailure(error)));\n    };\n}\n\n// Handle HTTP errors since fetch won't.\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}