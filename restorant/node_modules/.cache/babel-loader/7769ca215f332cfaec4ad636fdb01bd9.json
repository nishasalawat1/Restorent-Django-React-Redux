{"ast":null,"code":"var _jsxFileName = \"/home/rails/learning/react/Restorent-Django-React-Redux/Django-React/restorant/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport CustomNavbar from './Navbar'; // import { Redirect } from 'react-router-dom';\n// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { browserHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    username,\n    password\n  } = inputs;\n  const dispatch = useDispatch();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (username && password) {\n      // get return url from location state or default to home page\n      dispatch(props.loginHandler(username, password));\n    } // console.log(this.props)\n\n  }\n\n  ;\n  const {\n    error,\n    loading,\n    loginData,\n    history\n  } = props;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error! \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        onChange: e => setInputs(inputs => ({ ...inputs,\n          ['username']: e\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setInputs(inputs => ({ ...inputs,\n          ['password']: e\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.loginHandler(this.state),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"q/ckUPpRuoYfAlSBK75Gb40dwk0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/rails/learning/react/Restorent-Django-React-Redux/Django-React/restorant/src/components/Login.js"],"names":["React","Component","useState","useEffect","CustomNavbar","useDispatch","useSelector","browserHistory","Login","props","inputs","setInputs","username","password","dispatch","handleSubmit","e","preventDefault","loginHandler","error","loading","loginData","history","message","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,YAAP,MAAyB,UAAzB,C,CACA;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAASC,cAAT,QAA+B,cAA/B;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC;AACjCU,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAApC;AAIA,QAAM;AAAED,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,MAA/B;AACA,QAAMI,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,WAASU,YAAT,CAAsBC,CAAtB,EAAwB;AAEpBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIL,QAAQ,IAAIC,QAAhB,EAA0B;AACtB;AACAC,MAAAA,QAAQ,CAACL,KAAK,CAACS,YAAN,CAAmBN,QAAnB,EAA6BC,QAA7B,CAAD,CAAR;AACH,KAPmB,CAQpB;;AACH;;AAAA;AAED,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,MAAyCb,KAA/C;;AACA,MAAIW,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAID,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACI,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,4BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,QAAQ,EAAER,YAA5B;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,WAAW,EAAC,UAHhB;AAII,QAAA,QAAQ,EAAGC,CAAD,IAAOL,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,WAAC,UAAD,GAAcM;AAA3B,SAAL,CAAP;AAJ9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAMM;AAAA;AAAA;AAAA;AAAA,cANN,eAMY;AAAA;AAAA;AAAA;AAAA,cANZ,eAOI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,WAAW,EAAC,UAHhB;AAII,QAAA,QAAQ,EAAGA,CAAD,IAAOL,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,WAAC,UAAD,GAAcM;AAA3B,SAAL,CAAP;AAJ9B;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYM;AAAA;AAAA;AAAA;AAAA,cAZN,eAYY;AAAA;AAAA;AAAA;AAAA,cAZZ,eAaI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWS,YAAX,CAAwB,KAAKM,KAA7B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA/CQhB,K;UAMYH,W;;;KANZG,K;AAiDT,eAAeA,KAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport CustomNavbar from './Navbar';\n// import { Redirect } from 'react-router-dom';\n// import { useDispatch, useSelector } from \"react-redux\";\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\nimport { browserHistory } from 'react-router'\n\nfunction Login(props) {\n    const [inputs, setInputs] = useState({\n        username: '',\n        password: ''\n    });\n    const { username, password } = inputs;\n    const dispatch = useDispatch();\n\n    function handleSubmit(e){\n\n        e.preventDefault();\n\n        if (username && password) {\n            // get return url from location state or default to home page\n            dispatch(props.loginHandler(username, password));\n        }\n        // console.log(this.props)\n    };\n\n    const { error, loading, loginData, history } = props;\n    if (loading) {\n        return <div>loading.....</div>\n    }\n    if (error) {\n        return <div>Error! {error.message}</div>\n    }\n    return (\n        <div>\n            <CustomNavbar />\n            <h2>Login Page</h2>\n            <form name=\"form\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name='username'\n                    placeholder=\"Username\"\n                    onChange={(e) => setInputs(inputs => ({ ...inputs, ['username']: e }))}\n                /><br /><br />\n                <input\n                    type=\"password\"\n                    name='password'\n                    placeholder=\"Password\"\n                    onChange={(e) => setInputs(inputs => ({ ...inputs, ['password']: e }))}\n                /><br /><br />\n                <button onClick={() => this.props.loginHandler(this.state)}>Login</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}